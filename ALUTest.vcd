$date
	Thu Nov  4 17:06:47 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALUTest_v $end
$var wire 1 ! Zero $end
$var wire 64 " BusW [63:0] $end
$var reg 4 # ALUCtrl [3:0] $end
$var reg 64 $ BusA [63:0] $end
$var reg 64 % BusB [63:0] $end
$var reg 8 & passed [7:0] $end
$scope module uut $end
$var wire 4 ' ALUCtrl [3:0] $end
$var wire 64 ( BusA [63:0] $end
$var wire 64 ) BusB [63:0] $end
$var wire 1 ! Zero $end
$var reg 64 * BusW [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 + numTests [7:0] $end
$var reg 8 , passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 - BusW [63:0] $end
$var reg 1 . Zero $end
$var reg 64 / expectedBusW [63:0] $end
$var reg 1 0 expectedZero $end
$var reg 8 1 passed [7:0] $end
$var reg 121 2 testType [120:0] $end
$upscope $end
$scope task stim $end
$var reg 4 3 newALUCtrl [3:0] $end
$var reg 64 4 newBusA [63:0] $end
$var reg 64 5 newBusB [63:0] $end
$var reg 4 6 setALUCtrl [3:0] $end
$var reg 64 7 setBusA [63:0] $end
$var reg 64 8 setBusB [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
x0
bx /
x.
bx -
bx ,
bx +
bx *
b1 )
b1 (
b0 '
b0 &
b1 %
b1 $
b0 #
bx "
x!
$end
#20000
b1 "
b1 *
#21000
0!
#90000
b0 3
b1 5
b1 4
#180000
b0 6
b1 8
b1 7
#190000
b1 &
b1 1
b1001001011011100111000001110101011101000010000000110000 2
00
0.
b1 /
b1 -
#280000
b1 3
b0 5
b0 4
#370000
b1 #
b1 '
b0 %
b0 )
b0 $
b0 (
b1 6
b0 8
b0 7
#380000
b1001001011011100111000001110101011101000010000000110001 2
10
b0 /
#390000
b0 "
b0 *
#391000
1!
#470000
b10 3
b11 5
b10 4
#560000
b10 #
b10 '
b11 %
b11 )
b10 $
b10 (
b10 6
b11 8
b10 7
#570000
b1001001011011100111000001110101011101000010000000110010 2
00
1.
b101 /
b0 -
#580000
b101 "
b101 *
#581000
0!
#660000
b110 3
b10 5
#750000
b110 #
b110 '
b10 %
b10 )
b110 6
b10 8
#760000
b1001001011011100111000001110101011101000010000000110011 2
10
0.
b0 /
b101 -
#770000
b0 "
b0 *
#771000
1!
#850000
b111 3
b10100 5
b10100 4
#940000
b111 #
b111 '
b10100 %
b10100 )
b10100 $
b10100 (
b111 6
b10100 8
b10100 7
#950000
b1001001011011100111000001110101011101000010000000110100 2
00
1.
b10100 /
b0 -
#960000
b10100 "
b10100 *
#961000
0!
#1040000
b100 +
b1 ,
