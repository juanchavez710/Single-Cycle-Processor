$date
	Thu Nov 18 16:59:20 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module NextPCLogicTest_v $end
$var wire 64 ! NextPC [63:0] $end
$var reg 1 " ALUZero $end
$var reg 1 # Branch $end
$var reg 64 $ CurrentPC [63:0] $end
$var reg 64 % SignExtImm64 [63:0] $end
$var reg 1 & Uncondbranch $end
$var reg 8 ' passed [7:0] $end
$scope module uut $end
$var wire 1 " ALUZero $end
$var wire 1 # Branch $end
$var wire 64 ( CurrentPC [63:0] $end
$var wire 1 ) Selector $end
$var wire 64 * SignExtImm64 [63:0] $end
$var wire 1 & Uncondbranch $end
$var wire 1 + ZeroANDBranch $end
$var reg 64 , NextPC [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 - numTests [7:0] $end
$var reg 8 . passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 / actualOut [63:0] $end
$var reg 64 0 expectedOut [63:0] $end
$var reg 8 1 passed [7:0] $end
$var reg 121 2 testType [120:0] $end
$upscope $end
$scope task stim $end
$var reg 1 3 newALUZero $end
$var reg 1 4 newBranch $end
$var reg 64 5 newCurrentPC [63:0] $end
$var reg 64 6 newSignExtImm64 [63:0] $end
$var reg 1 7 newUncondbranch $end
$var reg 1 8 setALUZero $end
$var reg 1 9 setBranch $end
$var reg 64 : setCurrentPC [63:0] $end
$var reg 64 ; setSignExtImm64 [63:0] $end
$var reg 1 < setUncondbranch $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0<
b100 ;
b0 :
09
08
x7
bx 6
bx 5
x4
x3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
0+
b0 *
0)
b0 (
b0 '
0&
b0 %
b0 $
0#
0"
bx !
$end
#2000
b100 !
b100 ,
#90000
b100 %
b100 *
07
03
04
b100 6
b0 5
#100000
1<
18
b10000 ;
b1 '
b1 1
b1001001011011100111000001110101011101000010000000110000 2
b100 0
b100 /
#190000
1)
1&
1"
b10000 %
b10000 *
17
13
b10000 6
#193000
b10000 !
b10000 ,
#200000
b10 '
b10 1
b1001001011011100111000001110101011101000010000000110001 2
b10000 0
b10000 /
#290000
b10 -
b10 .
